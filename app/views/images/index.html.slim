- title params[:q].presence || 'Images'

- if @search_error.blank?
  - wide_layout

  .js-grid-loading

    .grid-header.js-masonry-grid-header
      - if params[:q].present?
        h1 = "Searching for \"#{params[:q]}\""
      - else
        h1 Images

      .js-dropdown.dropdown--image-sort
        - image_sort_labels do |current, others|
          a.js-dropdown__toggle href="#"
            = current
            span
              i.fa.fa-caret-down<
          .js-dropdown__content.hidden
            - others.each do |sort, label|
              a href=url_for(params.permit(:q).merge(sort: sort))
                = label

      - if @images.any?
        = render partial: 'layouts/pagination', locals: { resources: @images }
      - else
        p No images found.

    .grid.js-masonry-grid
      - @images.each do |image|
        .grid__item.block
          / Meta links
          a.meta data-starrable="Image" data-starrable-id=image.id title="Star this image!" href="#"
            i.fa.fa-star>
            span.meta__count= image.star_count
          a.meta href=image_path(image, anchor: 'comments')
            i.fa.fa-comments>
            span.meta__count= image.comment_count
          / Image
          a.image__link href=image_path(image, params.permit(:q, :sort)) title=image.tag_names.join(', ')
            - if image.image.animated?
              / Poster image allows Masonry to judge the item size before the media has loaded, preventing layout "jumps".
              video.image__video autoplay="" loop="" muted="" poster=image.image.poster_url
                source src=image.image.webm_url type="video/webm"
                source src=image.image.mp4_url type="video/mp4"
                img src=image.image.poster_url
            - else
              img src=image.image.thumbnail_url
          / Source
          a.meta.meta--bottom href=image.source
            i.fa.fa-retweet>
            = image.short_source

  = stars_for @images

- else
  h1 Oops
  p
    | There is a tiny problem with your search:
    strong=<> @search_error.message
